@page "/facedetection"
@rendermode InteractiveServer

<PageTitle>Face Detection</PageTitle>

<p>Select an image file from your computer.</p>

<InputFile OnChange="OnFileSelected" accept="image/*" />

@if (isProcessing)
{
	<p><em>Processing...</em></p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">@errorMessage</div>
}
else if (faceDetection is not null)
{
	<hr />
	<table class="table">
		<thead>
			<tr>
				<th>Detected Faces</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>@faceDetection</td>
			</tr>
		</tbody>
	</table>
}

@code {
	private string? faceDetection;
	private bool isProcessing = false;
	private string? errorMessage;

	private async Task OnFileSelected(InputFileChangeEventArgs e)
	{
		var file = e.File;
		const long maxSize = 2L * 1024 * 1024;

		if (file == null)
		{
			errorMessage = "No file selected.";
			return;
		}

		if (file.Size > maxSize)
		{
			errorMessage = "File is too large. Max allowed size is 2 MB.";
			return;
		}

		isProcessing = true;
		errorMessage = null;

		await using var stream = file.OpenReadStream(maxAllowedSize: maxSize);

		await using var memoryStream = new MemoryStream();
		await stream.CopyToAsync(memoryStream);
		memoryStream.Position = 0;

		faceDetection = await ImageProcessingInstance.RunImageProcessing(memoryStream);

		isProcessing = false;

	}
}